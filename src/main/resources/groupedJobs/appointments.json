{
  "jobs": [
    {
      "name": "Patient appointment",
      "type": "customSql",
      "readerSql": "SELECT pa.patient_id, pa.patient_appointment_id AS `appointment_id`, prov.provider_name AS `appointment_provider`, pa.start_date_time AS `appointment_start_time`, pa.end_date_time AS `appointment_end_time`, aspec.name AS `appointment_speciality`, appser.name AS `appointment_service`, appser.duration_mins AS `appointment_service_duration`, ast.name AS `appointment_service_type`, ast.duration_mins AS `appointment_service_type_duration`, pa.status AS `appointment_status`, l.name AS `appointment_location`, pa.appointment_kind, pa.comments FROM patient_appointment pa INNER JOIN appointment_service appser ON appser.appointment_service_id = pa.appointment_service_id AND pa.voided = FALSE AND appser.voided = FALSE LEFT OUTER JOIN appointment_speciality aspec ON aspec.speciality_id = appser.speciality_id AND aspec.voided = FALSE LEFT OUTER JOIN appointment_service_type ast ON ast.appointment_service_type_id = pa.appointment_service_type_id AND ast.voided = FALSE LEFT OUTER JOIN location l ON l.location_id = pa.location_id AND l.retired = FALSE LEFT OUTER JOIN patient_appointment_provider pap on pa.patient_appointment_id = pap.patient_appointment_id AND pap.voided=0 OR pap.voided IS NULL LEFT OUTER JOIN (SELECT p.provider_id, CONCAT_WS(' ', pn.given_name, pn.middle_name, pn.family_name_prefix, pn.family_name, pn.family_name_suffix) AS `provider_name` FROM provider p INNER JOIN person_name pn ON pn.person_id = p.person_id AND pn.voided = FALSE AND p.retired = FALSE) AS prov ON prov.provider_id = COALESCE(pa.provider_id, pap.provider_id)",
      "tableName": "patient_appointment_default",
      "incrementalUpdateConfig": {
        "updateOn": "appointment_id",
        "eventCategory": "appointments",
        "openmrsTableName": "patient_appointment"
      }
    },
    {
      "name": "Appointment service",
      "type": "customSql",
      "readerSql": "SELECT appser.appointment_service_id, appser.name AS `service_name`, appser.description AS `service_description`, appser.start_time AS `service_start_time`, appser.end_time AS `service_end_time`, appser.max_appointments_limit AS `service_max_load`, appser.duration_mins AS `service_duration`, l.name AS `location_name`, ast.name AS `service_type`, ast.duration_mins AS `service_type_duration`, spec.name AS `speciality` FROM (SELECT appointment_service_id, name, description, start_time, end_time, max_appointments_limit, duration_mins, location_id, speciality_id, voided FROM appointment_service WHERE voided = FALSE) appser LEFT OUTER JOIN appointment_service_type ast ON ast.appointment_service_id = appser.appointment_service_id AND ast.voided = FALSE LEFT OUTER JOIN location l ON l.location_id = appser.location_id AND l.retired = FALSE LEFT OUTER JOIN appointment_speciality spec ON spec.speciality_id = appser.speciality_id AND spec.voided = FALSE",
      "tableName": "appointment_service_default",
      "incrementalUpdateConfig": {
        "updateOn": "appointment_service_id",
        "eventCategory": "appointmentservice",
        "openmrsTableName": "appointment_service"
      }
    },
    {
      "name": "Appointment service availability",
      "type": "customSql",
      "readerSql": "SELECT appser.appointment_service_id, appser.name AS `service_name`, l.name AS `service_location`, aswa.day_of_week AS `availability_day_of_week`, aswa.start_time AS `availability_start_time`, aswa.end_time AS `availability_end_time`, aswa.max_appointments_limit AS `availability_max_load` FROM (SELECT appointment_service_id, name, location_id, voided FROM appointment_service WHERE voided = FALSE) appser LEFT OUTER JOIN appointment_service_weekly_availability aswa ON aswa.service_id = appser.appointment_service_id AND aswa.voided = FALSE LEFT OUTER JOIN location l ON l.location_id = appser.location_id AND l.retired = FALSE",
      "tableName": "service_availability_default",
      "incrementalUpdateConfig": {
        "updateOn": "appointment_service_id",
        "eventCategory": "appointmentservice",
        "openmrsTableName": "appointment_service"
      }
    },
    {
      "name": "Appointment speciality",
      "type": "customSql",
      "readerSql": "SELECT speciality_id, name AS `speciality` FROM appointment_speciality WHERE voided = FALSE",
      "tableName": "appointment_speciality_default"
    }
  ]
}