buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
        dependencyCheckVersion = '3.1.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.owasp:dependency-check-gradle:${dependencyCheckVersion}")
    }
}

plugins {
    id "nebula.ospackage" version "4.5.1"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'org.owasp.dependencycheck'

group = 'org.bahmni.mart'
version = '1.0.0'

description = "Batch job for Bahmni Mart"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    dependsOn "test"
}

test {
    systemProperties System.properties
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}

jacocoTestCoverageVerification {
    dependsOn "jacocoTestReport"
    violationRules {
        rule {
            limit {
                minimum = 0.940
            }
        }

        rule {
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.850
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.batch:spring-batch-test")
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.35'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.2'
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.3.0'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.23'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
    compile "com.github.jsqlparser:jsqlparser:1.1"
    compile 'org.springframework.cloud:spring-cloud-starter-task:1.2.2.RELEASE'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.6.1'
    compile group: 'org.json', name: 'json', version: '20160212'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    testCompile group: 'org.powermock', name: 'powermock-core', version: '1.6.4'
    testCompile "org.powermock:powermock-module-junit4:1.6.4"
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.4"
    testCompile "org.powermock:powermock-api-mockito:1.6.4"
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.bahmni.mart.Application'
    }
}

ospackage {
    packageName = 'bahmni-mart'
    release = System.getenv('GO_PIPELINE_COUNTER') ?: 1
    arch = NOARCH
    os = LINUX
    user = 'root'

    into '/opt/bahmni-mart'

    from("${projectDir}/scripts/builds/rpm/") {
        fileMode = 0755
        createDirectoryEntry = true
        into '/opt/bahmni-mart/bin'
    }

    from("${buildDir}/libs") {
        include(String.format("%s-%s.jar", project.name, project.version))
        fileMode = 0755
        createDirectoryEntry = true
        rename(String.format("%s-%s.jar", project.name, project.version), String.format("%s.jar", project.name))
        into "/opt/bahmni-mart/lib"
    }

    from("${projectDir}/conf/bahmni-mart.json") {
        fileMode = 0755
        createDirectoryEntry = true
        into "/opt/bahmni-mart/conf"
    }

    from("${projectDir}/conf/liquibase.xml") {
        fileMode = 0766
        createDirectoryEntry = true
        into "/opt/bahmni-mart/conf"
    }

    from("${projectDir}/conf/bahmni-mart-scdf-liquibase.xml") {
        fileMode = 0766
        createDirectoryEntry = true
        into "/opt/bahmni-mart/conf"
    }
}

buildRpm {
    dependsOn "build", "jar"

    requires("cronie")


    postInstall file("${projectDir}/scripts/builds/postinstall.sh")
    postUninstall file("${projectDir}/scripts/builds/postuninstall.sh")
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}

checkstyle {
    project.ext.checkstyleVersion = '8.8'
    project.ext.sevntuChecksVersion = '1.27.0'
    ignoreFailures = false
    configFile = file("src/main/resources/checkStyle.xml")

    checkstyleMain {
        source = sourceSets.main.allSource
    }

    configurations {
        checkstyle
    }

    dependencies{
        assert project.hasProperty("checkstyleVersion")

        checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
        checkstyle "com.github.sevntu-checkstyle:sevntu-checks:${sevntuChecksVersion}"
    }
}